/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.login.forms;

import controllerDAO.EmpregadoJpaController;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.Empregado;
import view.admin.AdminRegistarForm;

/**
 *
 * @author helio
 */
public class splashScreen extends javax.swing.JFrame {

    /**
     * Creates new form splashScreen
     */
    public splashScreen() {
       initComponents();
       
       ImageIcon icon = new ImageIcon("src/view/imagens/food icon.jpg");
       icon.setImage(icon.getImage().getScaledInstance(iconSplash.getWidth(), iconSplash.getWidth(), 1));
       iconSplash.setIcon(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        iconSplash = new javax.swing.JLabel();
        LoadinValue = new javax.swing.JLabel();
        LoadingLabel = new javax.swing.JLabel();
        loadingbar = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainPanel.setBackground(new java.awt.Color(255, 255, 255));
        MainPanel.setPreferredSize(new java.awt.Dimension(1070, 660));

        LoadinValue.setText("0%");

        LoadingLabel.setText("Carregando....");

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(125, 121, 121));
        jLabel1.setText("Sistema de Gestão de Lanchonete");

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadingbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LoadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LoadinValue, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addContainerGap(269, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(350, 350, 350))
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(iconSplash, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(iconSplash, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LoadinValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LoadingLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadingbar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(splashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(splashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(splashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(splashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        splashScreen telaIncial = new splashScreen();
        telaIncial.setVisible(true);
        try{
            for(int i= 0; i<= 100; i++){
                Thread.sleep(100);
                telaIncial.LoadinValue.setText(i+"%");
                
                if(i==10){
                  telaIncial.LoadingLabel.setText("Carregando");
                }
                if(i==20){
                  telaIncial.LoadingLabel.setText("Carregando Módulos...");
                }
                if(i==50){
                  telaIncial.LoadingLabel.setText("Conectando ao banco de dados...");
                }
                if(i==70){
                  telaIncial.LoadingLabel.setText("Conexão bem-sucedida!");
                }
                if(i==80){
                  telaIncial.LoadingLabel.setText("Iniciando aplicativo...");
                }
                  telaIncial.loadingbar.setValue(i);
                  
                if(i==100){
                    
                    
                    
                }
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    /**
     * 
     * @return 
     */
    private boolean verificarAdmin(){
        EmpregadoJpaController empregadoDAO = new EmpregadoJpaController(connection.ConnectionFactory.getEmf());
        List<Empregado>  listaEmp = empregadoDAO.findEmpregadoEntities();
                    
        for(Empregado emp: listaEmp){
            if(!(emp.getNivelDeAcesso() == 0)){
                AdminRegistarForm registarAdmin = new AdminRegistarForm();
                registarAdmin.setVisible(true);
            } else{
                LoginForm loginForm = new LoginForm();
                loginForm.setVisible(true);
            }
        }
        return false;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LoadinValue;
    private javax.swing.JLabel LoadingLabel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel iconSplash;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar loadingbar;
    // End of variables declaration//GEN-END:variables
}
