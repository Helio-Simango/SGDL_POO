package view.login.forms;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;


/**
 *
 * @author helio
 */
public class ResetPasswordForm extends javax.swing.JDialog implements KeyListener, MouseListener{

    private final String emailCodigoString = " Introduz o seu Email";
    private final String CodigoVerificacaoString = " Codigo de Verificação";
    private final String  novaSenha= " Nova password";
    private final String confirmNovaSenha = " Confirmanar nova senha";
    /**
     * Creates new form ResetPasswordForm
     */
    public ResetPasswordForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }
    
    /**
     *  Inicializar os compontes,e definir a regra de negocio
     */
    private void init(){
        //Inicialização de componentes, definindo a regra de negocio
        //ckLembrarPassword.setEnabled(false);   // O metedo desabilita o componete
        txtNewPassWord.setEchoChar((char) 0);
        txtConfirmarNewPassWord.setEchoChar((char) 0);
        txtEmailCodigo.setText(emailCodigoString);
        
        // Adicionar os eventos aos componentes
        txtEmailCodigo.addKeyListener(this);
        txtCodigoVerificacao.addKeyListener(this);
        txtNewPassWord.addKeyListener(this);
        txtConfirmarNewPassWord.addKeyListener(this);
        btnRecuperarSenha.addKeyListener(this);
    }
    /**
     *  Metdo cleanFields faz a limpeza dos campos
     *  introduzindo uma string vazia no determinado campo
     */
    private void cleanFields(){
        txtEmailCodigo.setText("");
        txtCodigoVerificacao.setText("");
        txtNewPassWord.setText("");
        txtConfirmarNewPassWord.setText("");
    }
    
    /**
     *  Metedo para preencher os campos 
     *  no painel resetPasswordPanel
     */
    private void setTextOnResetPassword(){
        txtCodigoVerificacao.setText(CodigoVerificacaoString);
        txtNewPassWord.setText(novaSenha);
        txtConfirmarNewPassWord.setText(confirmNovaSenha);
    }
    
    /**
     *  Mostra o Painel recebido por parametro no frame
     *  usando o cardlayout.
     * @param panel 
     */
    private void showPanel(JPanel jpanel){
        containerPanel.removeAll();
        containerPanel.repaint();
        containerPanel.revalidate();
        containerPanel.add(jpanel);
    }

    
    private boolean mouseEnteredEvent( JTextField jTextField, String txtString){   
        if(jTextField.getText().equals(txtString)){  
            return true;
        } else{
            return false;
        }
    }
    
    private boolean mouseEnteredEvent(JPasswordField jpassWordField, String txtPassWordString){   
        if(jpassWordField.getText().equals(txtPassWordString)){  
            return true;
        } else{
            return false;
        }
    }
   
    private boolean mouseExitedEvent(JTextField jtextField){
        if(jtextField.getText().equals("")){
            return true;
        }
        return false;
    }
    
    private boolean mouseExitedEvent(JPasswordField jPassWordField){
        if(jPassWordField.getText().equals("")){
            return true;
        }
        return false;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backGroundPanel = new javax.swing.JPanel();
        MenuFixedPanel = new javax.swing.JPanel();
        btnCancelar = new javax.swing.JLabel();
        containerPanel = new javax.swing.JPanel();
        VerifictionCodePanel = new javax.swing.JPanel();
        btnContinuarCodigo = new com.k33ptoo.components.KButton();
        txtEmailCodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnCodigoVerificacao = new com.k33ptoo.components.KButton();
        resetPasswordPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNewPassWord = new javax.swing.JPasswordField();
        txtConfirmarNewPassWord = new javax.swing.JPasswordField();
        ckLembrarPassword = new javax.swing.JCheckBox();
        txtCodigoVerificacao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnRecuperarSenha = new com.k33ptoo.components.KButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        backGroundPanel.setBackground(new java.awt.Color(255, 255, 255));

        MenuFixedPanel.setBackground(new java.awt.Color(255, 255, 255));

        btnCancelar.setForeground(new java.awt.Color(102, 102, 102));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/icons_back.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout MenuFixedPanelLayout = new javax.swing.GroupLayout(MenuFixedPanel);
        MenuFixedPanel.setLayout(MenuFixedPanelLayout);
        MenuFixedPanelLayout.setHorizontalGroup(
            MenuFixedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuFixedPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MenuFixedPanelLayout.setVerticalGroup(
            MenuFixedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuFixedPanelLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addGap(17, 17, 17))
        );

        containerPanel.setLayout(new java.awt.CardLayout());

        VerifictionCodePanel.setBackground(new java.awt.Color(255, 255, 255));

        btnContinuarCodigo.setText("Continuar");
        btnContinuarCodigo.setkBorderRadius(30);
        btnContinuarCodigo.setkEndColor(new java.awt.Color(106, 192, 106));
        btnContinuarCodigo.setkHoverEndColor(new java.awt.Color(51, 51, 51));
        btnContinuarCodigo.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnContinuarCodigo.setkHoverStartColor(new java.awt.Color(68, 146, 70));
        btnContinuarCodigo.setkStartColor(new java.awt.Color(106, 192, 106));
        btnContinuarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinuarCodigoActionPerformed(evt);
            }
        });

        txtEmailCodigo.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        txtEmailCodigo.setForeground(new java.awt.Color(102, 102, 102));
        txtEmailCodigo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(202, 202, 202)));
        txtEmailCodigo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtEmailCodigoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtEmailCodigoMouseExited(evt);
            }
        });
        txtEmailCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailCodigoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel1.setText("Detalhes do usuario");

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("Introduza o Email da conta a recuperar a senha");

        btnCodigoVerificacao.setText("enviar código de verificação");
        btnCodigoVerificacao.setkBorderRadius(30);
        btnCodigoVerificacao.setkEndColor(new java.awt.Color(44, 44, 57));
        btnCodigoVerificacao.setkHoverEndColor(new java.awt.Color(51, 51, 51));
        btnCodigoVerificacao.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnCodigoVerificacao.setkHoverStartColor(new java.awt.Color(51, 51, 51));
        btnCodigoVerificacao.setkStartColor(new java.awt.Color(44, 44, 57));
        btnCodigoVerificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCodigoVerificacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VerifictionCodePanelLayout = new javax.swing.GroupLayout(VerifictionCodePanel);
        VerifictionCodePanel.setLayout(VerifictionCodePanelLayout);
        VerifictionCodePanelLayout.setHorizontalGroup(
            VerifictionCodePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VerifictionCodePanelLayout.createSequentialGroup()
                .addGroup(VerifictionCodePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VerifictionCodePanelLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel3))
                    .addGroup(VerifictionCodePanelLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(VerifictionCodePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtEmailCodigo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCodigoVerificacao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnContinuarCodigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VerifictionCodePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(124, 124, 124))
        );
        VerifictionCodePanelLayout.setVerticalGroup(
            VerifictionCodePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VerifictionCodePanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addComponent(jLabel3)
                .addGap(37, 37, 37)
                .addComponent(txtEmailCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCodigoVerificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btnContinuarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(162, Short.MAX_VALUE))
        );

        containerPanel.add(VerifictionCodePanel, "card2");

        resetPasswordPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel2.setText("Detalhes do usuario");

        txtNewPassWord.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        txtNewPassWord.setForeground(new java.awt.Color(102, 102, 102));
        txtNewPassWord.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(202, 202, 202)));
        txtNewPassWord.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtNewPassWordCaretUpdate(evt);
            }
        });
        txtNewPassWord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtNewPassWordMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtNewPassWordMouseExited(evt);
            }
        });

        txtConfirmarNewPassWord.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        txtConfirmarNewPassWord.setForeground(new java.awt.Color(102, 102, 102));
        txtConfirmarNewPassWord.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(202, 202, 202)));
        txtConfirmarNewPassWord.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtConfirmarNewPassWordCaretUpdate(evt);
            }
        });
        txtConfirmarNewPassWord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtConfirmarNewPassWordMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtConfirmarNewPassWordMouseExited(evt);
            }
        });
        txtConfirmarNewPassWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfirmarNewPassWordActionPerformed(evt);
            }
        });

        ckLembrarPassword.setForeground(new java.awt.Color(153, 153, 153));
        ckLembrarPassword.setText("Lembrar a Pass-word");
        ckLembrarPassword.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        ckLembrarPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckLembrarPasswordActionPerformed(evt);
            }
        });

        txtCodigoVerificacao.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        txtCodigoVerificacao.setForeground(new java.awt.Color(102, 102, 102));
        txtCodigoVerificacao.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(202, 202, 202)));
        txtCodigoVerificacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtCodigoVerificacaoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtCodigoVerificacaoMouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("Introduza o codigo de verificação enviado por email");

        btnRecuperarSenha.setText("Continuar");
        btnRecuperarSenha.setkBorderRadius(30);
        btnRecuperarSenha.setkEndColor(new java.awt.Color(106, 192, 106));
        btnRecuperarSenha.setkHoverEndColor(new java.awt.Color(51, 51, 51));
        btnRecuperarSenha.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnRecuperarSenha.setkHoverStartColor(new java.awt.Color(68, 146, 70));
        btnRecuperarSenha.setkStartColor(new java.awt.Color(106, 192, 106));
        btnRecuperarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecuperarSenhaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout resetPasswordPanelLayout = new javax.swing.GroupLayout(resetPasswordPanel);
        resetPasswordPanel.setLayout(resetPasswordPanelLayout);
        resetPasswordPanelLayout.setHorizontalGroup(
            resetPasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resetPasswordPanelLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(resetPasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resetPasswordPanelLayout.createSequentialGroup()
                        .addGroup(resetPasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ckLembrarPassword)
                            .addComponent(txtConfirmarNewPassWord, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNewPassWord, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRecuperarSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                            .addComponent(txtCodigoVerificacao, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resetPasswordPanelLayout.createSequentialGroup()
                        .addGroup(resetPasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resetPasswordPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(65, 65, 65)))
                        .addGap(65, 65, 65))))
        );
        resetPasswordPanelLayout.setVerticalGroup(
            resetPasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resetPasswordPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(48, 48, 48)
                .addComponent(txtCodigoVerificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtNewPassWord, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtConfirmarNewPassWord, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckLembrarPassword)
                .addGap(33, 33, 33)
                .addComponent(btnRecuperarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        containerPanel.add(resetPasswordPanel, "card3");

        javax.swing.GroupLayout backGroundPanelLayout = new javax.swing.GroupLayout(backGroundPanel);
        backGroundPanel.setLayout(backGroundPanelLayout);
        backGroundPanelLayout.setHorizontalGroup(
            backGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MenuFixedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        backGroundPanelLayout.setVerticalGroup(
            backGroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backGroundPanelLayout.createSequentialGroup()
                .addComponent(MenuFixedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backGroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backGroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnContinuarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinuarCodigoActionPerformed
        
        String stringVazia = " ";
        stringVazia = stringVazia.trim();  // O metedo trim() serve para Revomover todos os espaços vazios
        String outraString = txtEmailCodigo.getText().trim(); // Remover todos espeços vazios da string digitada  
        // verificação do campo EmailCodigo, se 
        if(txtEmailCodigo.getText().equals(emailCodigoString) || stringVazia.equals(outraString)){
                 
            JOptionPane.showMessageDialog(this, "Introduza o email a Recuperar senha!");
            System.out.println(" Introduz um email a Recuperar Senha!! ");
        }else{
            // Fazer a Validação do email e depois
            // Chamar o painel para fazer o reset da password!
            setTextOnResetPassword();
            showPanel(resetPasswordPanel);
        }      
    }//GEN-LAST:event_btnContinuarCodigoActionPerformed

    private void txtEmailCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailCodigoActionPerformed

    private void btnCodigoVerificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCodigoVerificacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCodigoVerificacaoActionPerformed

    private void txtConfirmarNewPassWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfirmarNewPassWordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmarNewPassWordActionPerformed

    private void btnRecuperarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecuperarSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRecuperarSenhaActionPerformed

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        // chamar a tela para enviar o codigo de verificação
        // o metedo isDisplayable verifica se o componete ista a ser exibido!!
        if(resetPasswordPanel.isDisplayable()){    
            showPanel(VerifictionCodePanel);
            System.out.println("O panel resetPasswordPanel esta visivel");
        }else{    
            System.out.println("O Panel resetPasswordPane não esta visivel");
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void ckLembrarPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckLembrarPasswordActionPerformed
        // O metedo isSelected verifica se o checkbox foi selecionado ou não
        // Verificar se o checkbox foi selecionado, 
        // se tiver sido selecionado mostrar a senha caso não ocultar
        if(ckLembrarPassword.isSelected()){
            if(!txtNewPassWord.getText().equals(novaSenha)){
                txtNewPassWord.setEchoChar((char)0);
            } 
            if(!txtConfirmarNewPassWord.getText().equals(confirmNovaSenha)){
                txtConfirmarNewPassWord.setEchoChar((char)0);
            }
            //txtNewPassWord.setEchoChar((char) 0);
            //txtConfirmarNewPassWord.setEchoChar((char) 0);
        }else{
            // Se checkbox nao estiver selecionada executar o seguinte
            System.out.println(" A checkbox nao foi selecionada!!");      
            //
            if(txtNewPassWord.getText().equals(novaSenha)){
                txtNewPassWord.setEchoChar((char) 0);
            }else{
                txtNewPassWord.setEchoChar('*');
            }
            // campo txtConfirmarNewPassword verificar se tem um
            // texto ou nao dentro da textfeild
            if(txtConfirmarNewPassWord.getText().equals(confirmNovaSenha)){
                txtConfirmarNewPassWord.setEchoChar((char) 0);
            }else{
                txtConfirmarNewPassWord.setEchoChar('*');
            }
            
        }
    }//GEN-LAST:event_ckLembrarPasswordActionPerformed

    private void txtEmailCodigoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmailCodigoMouseEntered
        // TODO add your handling code here:
        
        /*
        System.out.println(""+ txtEmailCodigo.getText().equals(emailCodigoString));
        // se as duas Strings comparadas for verdadeira
        // limpa-se o campo de texto
        if(txtEmailCodigo.getText().equals(emailCodigoString)){
            txtEmailCodigo.setText(""); //limpar o campo!!
            System.out.println("O text é Introduz o email' então limpa o campo! ");  
            // Mais logica a ser implementada
        }else{
           System.out.println("Agora o texto é diferente!! ");
           // Mais logica a ser implementada
        }
        */
        System.out.println(" "+ mouseEnteredEvent(txtEmailCodigo, emailCodigoString));
        if(mouseEnteredEvent(txtEmailCodigo, emailCodigoString)){
            txtEmailCodigo.setText("");
        } 
    }//GEN-LAST:event_txtEmailCodigoMouseEntered

    
    private void txtEmailCodigoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmailCodigoMouseExited
        // Verificar se o campo esta vazio, se estiver 
        // setar a string 'Introduz o seu Email'
        if(txtEmailCodigo.getText().equals("")){
           txtEmailCodigo.setText(emailCodigoString);
        }
    }//GEN-LAST:event_txtEmailCodigoMouseExited

    private void txtCodigoVerificacaoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCodigoVerificacaoMouseEntered
        // TODO add your handling code here:
        // se as duas Strings comparadas for verdadeira
        // limpa-se o campo de texto
        if(txtCodigoVerificacao.getText().equals(CodigoVerificacaoString)){
            
            txtCodigoVerificacao.setText(""); //limpar o campo!!
            System.out.println("O text é Codigo Verificacao' então limpa o campo! ");  
            // Mais logica a ser implementada
        }else{
           System.out.println("Agora o texto é diferente!! ");
           // Mais logica a ser implementada
        }
    }//GEN-LAST:event_txtCodigoVerificacaoMouseEntered

    private void txtCodigoVerificacaoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCodigoVerificacaoMouseExited
        // TODO add your handling code here:
        if(txtCodigoVerificacao.getText().equals("")){
            txtCodigoVerificacao.setText(CodigoVerificacaoString);
        }
    }//GEN-LAST:event_txtCodigoVerificacaoMouseExited

    private void txtNewPassWordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNewPassWordMouseEntered
        // TODO add your handling code here:
        // se as duas Strings comparadas for verdadeira
        // limpa-se o campo de texto
        if(txtNewPassWord.getText().equals(novaSenha)){
            
             txtNewPassWord.setText(""); //limpar o campo!!
            System.out.println("O text é nova senha' então limpa o campo! ");  
            // Mais logica a ser implementada
        }else{
           System.out.println("Agora o texto é diferente!! ");
           // Mais logica a ser implementada
        }
    }//GEN-LAST:event_txtNewPassWordMouseEntered

    private void txtNewPassWordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNewPassWordMouseExited
        // TODO add your handling code here:
        if(txtNewPassWord.getText().equals("")){
            txtNewPassWord.setText(novaSenha);
        }
    }//GEN-LAST:event_txtNewPassWordMouseExited

    private void txtConfirmarNewPassWordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtConfirmarNewPassWordMouseEntered
        // TODO add your handling code here:
        if(txtConfirmarNewPassWord.getText().equals(confirmNovaSenha)){
            
            txtConfirmarNewPassWord.setText(""); //limpar o campo!!
            System.out.println("O text é confirmar senha' então limpa o campo! ");  
            // Mais logica a ser implementada
        }else{
           System.out.println("Agora o texto é diferente!! ");
           //txtConfirmarNewPassWord.setEchoChar('*');
           //ckLembrarPassword.setEnabled(true);
           // Mais logica a ser implementada
        }
    }//GEN-LAST:event_txtConfirmarNewPassWordMouseEntered

    private void txtConfirmarNewPassWordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtConfirmarNewPassWordMouseExited
        // TODO add your handling code here:
        if(txtConfirmarNewPassWord.getText().equals("")){
            txtConfirmarNewPassWord.setText(confirmNovaSenha);
        }
    }//GEN-LAST:event_txtConfirmarNewPassWordMouseExited

    private void txtNewPassWordCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtNewPassWordCaretUpdate
        // TODO add your handling code here:
        String stringVazia = " ";
        stringVazia = stringVazia.trim();  // O metedo trim() serve para Revomover todos os espaços vazios
        String outraString = txtNewPassWord.getText().trim(); // Remover todos espeços vazios da string digitada
        if(!(txtNewPassWord.getText().equals(novaSenha) || stringVazia.equals(outraString))){
            txtNewPassWord.setEchoChar('*');
            System.out.println("cheguei cheguei!!!!!!");
        }else{   
            txtNewPassWord.setEchoChar((char) 0);
        }
    }//GEN-LAST:event_txtNewPassWordCaretUpdate

    private void txtConfirmarNewPassWordCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtConfirmarNewPassWordCaretUpdate
        // TODO add your handling code here:
        String stringVazia = " ";
        stringVazia = stringVazia.trim();  // O metedo trim() serve para Revomover todos os espaços vazios
        String outraString = txtConfirmarNewPassWord.getText().trim(); // Remover todos espeços vazios da string digitada
        if( !(txtConfirmarNewPassWord.getText().equals(confirmNovaSenha) || stringVazia.equals(outraString))){
            txtConfirmarNewPassWord.setEchoChar('*');
            System.out.println("cheguei cheguei!!!!!!");
        }else{
            
            txtConfirmarNewPassWord.setEchoChar((char) 0);
        }
    }//GEN-LAST:event_txtConfirmarNewPassWordCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResetPasswordForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResetPasswordForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResetPasswordForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResetPasswordForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ResetPasswordForm dialog = new ResetPasswordForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MenuFixedPanel;
    private javax.swing.JPanel VerifictionCodePanel;
    private javax.swing.JPanel backGroundPanel;
    private javax.swing.JLabel btnCancelar;
    private com.k33ptoo.components.KButton btnCodigoVerificacao;
    private com.k33ptoo.components.KButton btnContinuarCodigo;
    private com.k33ptoo.components.KButton btnRecuperarSenha;
    private javax.swing.JCheckBox ckLembrarPassword;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel resetPasswordPanel;
    private javax.swing.JTextField txtCodigoVerificacao;
    private javax.swing.JPasswordField txtConfirmarNewPassWord;
    private javax.swing.JTextField txtEmailCodigo;
    private javax.swing.JPasswordField txtNewPassWord;
    // End of variables declaration//GEN-END:variables

    
    //Implementação dos metedos da interface KeyListener.
    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        if(e.getKeyCode() == KeyEvent.VK_ENTER){
            if(txtCodigoVerificacao.hasFocus()){
                txtNewPassWord.requestFocus();
                txtNewPassWord.setText("");
            } else if(txtNewPassWord.hasFocus()){
                txtConfirmarNewPassWord.requestFocus();
                txtConfirmarNewPassWord.setText("");
            } else if(txtConfirmarNewPassWord.hasFocus()){
                btnRecuperarSenha.doClick();
            }
        }
        
    }

    //Implementação dos metedos da interface MouseListener
    @Override
    public void mouseClicked(MouseEvent e) {
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }
}
